import "copyright.stg"
import "primitiveLiteral.stg"
import "junit.stg"

isTest() ::= "true"

targetPath() ::= "org/eclipse/collections/impl/factory/primitive"

fileName(primitive) ::= "<primitive.name>ObjectMapFactoryTest"

skipBoolean() ::= "true"

class(primitive) ::= <<
<body(primitive.type, primitive.name, primitive.wrapperName, primitive.charPrimitive)>
>>

body(type, name, wrapperName, charPrimitive) ::= <<
<copyright()>

package org.eclipse.collections.impl.factory.primitive;

import org.eclipse.collections.api.factory.map.primitive.Immutable<name>ObjectMapFactory;
import org.eclipse.collections.api.factory.map.primitive.Mutable<name>ObjectMapFactory;
import org.eclipse.collections.impl.map.mutable.primitive.<name>ObjectHashMap;

<junit()>

/**
 * This file was automatically generated from template file primitiveObjectMapsTest.stg.
 */
public class <name>ObjectMapFactoryTest
{
    @Test
    public void immutables()
    {
        this.assertImmutable<name>ObjectMapFactory(<name>ObjectMaps.immutable);
        this.assertImmutable<name>ObjectMapFactory(org.eclipse.collections.api.factory.primitive.<name>ObjectMaps.immutable);
    }

    private void assertImmutable<name>ObjectMapFactory(Immutable<name>ObjectMapFactory mapFactory)
    {
        Assertions.assertSame(<name>ObjectHashMap.newMap().toImmutable(), mapFactory.with());
        Assertions.assertSame(<name>ObjectHashMap.newMap().toImmutable(), mapFactory.of());
        Assertions.assertEquals(<name>ObjectMaps.immutable.of(<(literal.(type))("1")>, <(literal.(type))("1")>), <name>ObjectHashMap.newWithKeysValues(<(literal.(type))("1")>, <(literal.(type))("1")>).toImmutable());
        <name>ObjectHashMap sourceMap = <name>ObjectHashMap.newWithKeysValues(<(literal.(type))("1")>, <(literal.(type))("1")>, <(literal.(type))("2")>, <(literal.(type))("2")>);
        Assertions.assertEquals(sourceMap.toImmutable(), mapFactory.ofAll(sourceMap));
        Assertions.assertEquals(sourceMap.toImmutable(), mapFactory.withAll(sourceMap));
    }

    public void mutables()
    {
        this.assertMutable<name>ObjectMapFactory(<name>ObjectMaps.mutable);
        this.assertMutable<name>ObjectMapFactory(org.eclipse.collections.api.factory.primitive.<name>ObjectMaps.mutable);
    }

    private void assertMutable<name>ObjectMapFactory(Mutable<name>ObjectMapFactory mapFactory)
    {
        Assertions.assertEquals(<name>ObjectHashMap.newMap(), mapFactory.with());
        Assertions.assertEquals(<name>ObjectHashMap.newMap(), mapFactory.of());
        <name>ObjectHashMap sourceMap = <name>ObjectHashMap.newWithKeysValues(<(literal.(type))("1")>, <(literal.(type))("1")>, <(literal.(type))("2")>, <(literal.(type))("2")>);
        Assertions.assertEquals(sourceMap, mapFactory.ofAll(sourceMap));
        Assertions.assertEquals(sourceMap, mapFactory.withAll(sourceMap));
    }
}

>>
